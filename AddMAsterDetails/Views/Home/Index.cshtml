
@{
    ViewBag.Title = "Index";
    
}



<h2>Master details entry form</h2>
<div class="container">
    <div class="master">
        <h2>Order</h2>
        <table class="table table-responsive">
            <tr>
                <td>Order No</td>
                <td>
                    <input type="text" id="orderNo" class="form-control" />
                    <span class="error">Order no required</span>
                </td>
                <td>Order Date</td>
                <td>
                    <input type="text" id="orderDate" class="form-control" />
                    <span class="error">Valid order date required (ex: MM-dd-yyyy)</span>
                </td>
            </tr>
            <tr>
                <td>Description</td>
                <td colspan="3">
                    <textarea id="description" class="form-control"></textarea>
                </td>
            </tr>
        </table>
    </div>
    <div class="details">
        <h2>
            Order items
        </h2>
        <table class="table table-responsive">
            <tr>
                <td>Category</td>
                <td>Product</td>
                <td>Quantity</td>
                <td>Rate</td>
                <td>&nbsp;</td>
            </tr>
            <tr class="mycontainer" id="mainrow">
                <td>
                    <select id="productCategory" class="pc form-control" onchange="LoadProduct(this)">
                        <option>Select</option>
                    </select>
                    <span class="error">Select Category</span>
                </td>
                <td>
                    <select id="product" class="product form-control">
                        <option>Select</option>
                    </select>
                    <span class="error">Select product</span>
                </td>
                <td>
                    <input type="text" id="quantity" class="quantity form-control" />
                    <span class="error">Valid quantity required</span>
                </td>
                <td>
                    <input type="text" id="rate" class="rate form-control" />
                    <span class="error">Valid rate required</span>
                </td>
                <td>
                    <input type="button" id="add" value="add" style="width:80px" class="btn btn-success" />
                </td>
            </tr>
        </table>
        <div id="orderItems">
            <table class="table table-responsive" id="orderdetailsItems"></table>
            <span id="orderItemError" style="color:red"></span>
        </div>
        <div style="padding:10px 0; text-align:right">
            <input id="submit" type="button" value="Save Order" class="btn btn-warning" style="padding:10px 20px" />
        </div>
    </div>
</div>

<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.1/themes/base/jquery-ui.css" />
<script src="http://code.jquery.com/jquery-1.9.1.js"></script>
<script src="http://code.jquery.com/ui/1.10.1/jquery-ui.js"></script>
<script src="~/Scripts/MyScrips.js"></script>



@*<script type="text/javascript">
   $(function () {
        $('#orderDate').datepicker({
            dateFormat: 'dd-mm-yy'
        })
   })

    //--------------------------------------------
   var Categories = []
   //fetch categories from database
   function LoadCategory(element) {
       if (Categories.length == 0) {
           //ajax function for fetch data
           $.ajax({
               type: "GET",
               url: '/home/GetProductCategories',
               success: function (data) {
                   Categories = data;
                   //render catagory
                   renderCategory(element);
               }
           })
       }
       else {
           //render catagory to the element
           renderCategory(element);
       }
   }

   function renderCategory(element) {
       var $ele = $(element);
       $ele.empty();
       $ele.append($('<option/>').val('0').text('Select'));
       $.each(Categories, function (i, val) {
           $ele.append($('<option/>').val(val.CategoryId).text(val.CategoryNane));
       })
   }

   //fetch products
   function LoadProduct(categoryDD) {
       $.ajax({
           type: "GET",
           url: "/home/GetProducts",
           data: { 'categoryId': $(categoryDD).val() },
           success: function (data) {
               //render products to appropriate dropdown
               renderProduct($(categoryDD).parents('.mycontainer').find('select.product'), data);
           },
           error: function (error) {
               console.log(error);
           }
       })
   }

   function renderProduct(element, data) {
       //render product
       var $ele = $(element);
       $ele.empty();
       $ele.append($('<option/>').val('0').text('Select'));
       $.each(data, function (i, val) {
           $ele.append($('<option/>').val(val.ProductId).text(val.ProductName));
       })
   }

   $(document).ready(function () {
       //Add button click event
       $('#add').click(function () {
           //validation and add order items
           var isAllValid = true;
           if ($('#productCategory').val() == "0") {
               isAllValid = false;
               $('#productCategory').siblings('span.error').css('visibility', 'visible');
           }
           else {
               $('#productCategory').siblings('span.error').css('visibility', 'hidden');
           }

           if ($('#product').val() == "0") {
               isAllValid = false;
               $('#product').siblings('span.error').css('visibility', 'visible');
           }
           else {
               $('#product').siblings('span.error').css('visibility', 'hidden');
           }

           if (!($('#quantity').val().trim() != '' && (parseInt($('#quantity').val()) || 0))) {
               isAllValid = false;
               $('#quantity').siblings('span.error').css('visibility', 'visible');
           }
           else {
               $('#quantity').siblings('span.error').css('visibility', 'hidden');
           }

           if (!($('#rate').val().trim() != '' && !isNaN($('#rate').val().trim()))) {
               isAllValid = false;
               $('#rate').siblings('span.error').css('visibility', 'visible');
           }
           else {
               $('#rate').siblings('span.error').css('visibility', 'hidden');
           }

           if (isAllValid) {
               var $newRow = $('#mainrow').clone().removeAttr('id');
               $('.pc', $newRow).val($('#productCategory').val());
               $('.product', $newRow).val($('#product').val());

               //Replace add button with remove button
               $('#add', $newRow).addClass('remove').val('Remove').removeClass('btn-success').addClass('btn-danger');

               //remove id attribute from new clone row
               $('#productCategory,#product,#quantity,#rate,#add', $newRow).removeAttr('id');
               $('span.error', $newRow).remove();
               //append clone row
               $('#orderdetailsItems').append($newRow);

               //clear select data
               $('#productCategory,#product').val('0');
               $('#quantity,#rate').val('');
               $('#orderItemError').empty();
           }

       })

       //remove button click event
       $('#orderdetailsItems').on('click', '.remove', function () {
           $(this).parents('tr').remove();
       });

       $('#submit').click(function () {
           var isAllValid = true;

           //validate order items
           $('#orderItemError').text('');
           var list = [];
           var errorItemCount = 0;
           $('#orderdetailsItems tbody tr').each(function (index, ele) {
               if (
                   $('select.product', this).val() == "0" ||
                   (parseInt($('.quantity', this).val()) || 0) == 0 ||
                   $('.rate', this).val() == "" ||
                   isNaN($('.rate', this).val())
                   ) {
                   errorItemCount++;
                   $(this).addClass('error');
               } else {
                   var orderItem = {
                       ProductId: $('select.product', this).val(),
                       Quantity: parseInt($('.quantity', this).val()),
                       Rate: parseFloat($('.rate', this).val())
                   }
                   list.push(orderItem);
               }
           })

           if (errorItemCount > 0) {
               $('#orderItemError').text(errorItemCount + " invalid entry in order item list.");
               isAllValid = false;
           }

           if (list.length == 0) {
               $('#orderItemError').text('At least 1 order item required.');
               isAllValid = false;
           }

           if ($('#orderNo').val().trim() == '') {
               $('#orderNo').siblings('span.error').css('visibility', 'visible');
               isAllValid = false;
           }
           else {
               $('#orderNo').siblings('span.error').css('visibility', 'hidden');
           }

           if ($('#orderDate').val().trim() == '') {
               $('#orderDate').siblings('span.error').css('visibility', 'visible');
               isAllValid = false;
           }
           else {
               $('#orderDate').siblings('span.error').css('visibility', 'hidden');
           }

           if (isAllValid) {
               var data = {
                   OrderNumber: $('#orderNo').val().trim(),
                   OrderDateString: $('#orderDate').val().trim(),
                   Description: $('#description').val().trim(),
                   OrderDetails: list
               }

               $(this).val('Please wait...');

               $.ajax({
                   type: 'POST',
                   url: '/Home/Save',
                   data: JSON.stringify(data),
                   contentType: 'application/json',
                   success: function (data) {
                       if (data.status) {
                           alert('Successfully saved');
                           //here we will clear the form
                           list = [];
                           $('#orderNo,#orderDate,#description').val('');
                           $('#orderdetailsItems').empty();
                       }
                       else {
                           alert('Error');
                       }
                       $('#submit').val('Save');
                   },
                   error: function (error) {
                       console.log(error);
                       $('#submit').val('Save');
                   }
               });
           }

       });

   });

   LoadCategory($('#productCategory'));

</script>*@




<style>
    span.error {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    tr.error {
        background-color: rgba(255,0,0,0.35);
    }
</style>
    